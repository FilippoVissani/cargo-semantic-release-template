name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    name: Run tests on ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Show Env
        run: cargo --version

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  get-next-version:
    uses: semantic-release-action/next-release-version/.github/workflows/next-release-version.yml@v4

  release:
    if: github.event_name == 'push'
    needs:
      - check
      - get-next-version
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install semantic-release-cargo
        if: needs.get-next-version.outputs.new-release-published == 'true'
        uses: EricCrosson/install-github-release-binary@v2
        with:
          targets: semantic-release-cargo@2

      - name: Prepare semantic-release for Rust
        if: needs.get-next-version.outputs.new-release-published == 'true'
        run: semantic-release-cargo prepare ${{ needs.get-next-version.outputs.new-release-version }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master

      - name: Cargo build
        run: cargo build --release --target=x86_64-unknown-linux-gnu --all-targets

  success:
    runs-on: ubuntu-latest
    needs:
      - check
      - test-release
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
